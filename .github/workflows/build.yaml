name: build main

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test_django_job:
    uses: ./.github/workflows/test-django.yaml
  build_job:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [test_django_job]
    env:
      CONTAINER_WEBAPP_WORKDIR: /home/webapp
      DJANGO_PROJECT_SUBDIR: loukas_tech
      WEBAPP_PORT: 8000
      MY_REGISTRY: registry.digitalocean.com/loukas-tech-container-registry
      CLUSTER_NAME: k8s-fra1
      USE_DO_SPACES_FOR_STATIC: 1
      DJANGO_DB_ENGINE: django.db.backends.postgresql
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_API_TOKEN_KEY }}
      - name: Login to DO Container Registry
        run: doctl registry login --expiry-seconds 1200
      - name: Build container image
        working-directory: ./webapp
        run: |
           docker build -f Dockerfile \
             -t ${MY_REGISTRY}/webapp:latest  \
             -t ${MY_REGISTRY}/webapp:${GITHUB_SHA::7}-${GITHUB_RUN_ID::5} \
             --build-arg CONTAINER_WEBAPP_WORKDIR="${CONTAINER_WEBAPP_WORKDIR}" \
             --build-arg DJANGO_PROJECT_SUBDIR="${DJANGO_PROJECT_SUBDIR}" \
             --build-arg WEBAPP_PORT="${WEBAPP_PORT}" \
             .
      - name: Push image
        run: |
          docker push ${MY_REGISTRY}/webapp --all-tags
      - name: K8s cluster kubeconfig file with/ short-lived creds
        run: |
          doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER_NAME }}
      - name: Update deployment secrets
        run: |
          kubectl delete secret django-webapp-prod-env || true
          kubectl apply -f <((
          cat << EOF
          apiVersion: v1
          kind: Secret
          metadata:
            name: django-webapp-prod-env
          stringData:
            AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
            AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            DJANGO_SUPERUSER_USERNAME: "${{ secrets.DJANGO_SUPERUSER_USERNAME }}"
            DJANGO_SUPERUSER_PASSWORD: "${{ secrets.DJANGO_SUPERUSER_PASSWORD }}"
            DJANGO_SUPERUSER_EMAIL: "${{ secrets.DJANGO_SUPERUSER_EMAIL }}"
            DJANGO_SECRET_KEY: "${{ secrets.DJANGO_SECRET_KEY }}"
            ALLOWED_HOSTS: "${{ secrets.ALLOWED_HOSTS }}"
            DJANGO_DB_HOST: "${{ secrets.DJANGO_DB_HOST }}"
            DJANGO_DB_NAME: "${{ secrets.DJANGO_DB_NAME }}"
            DJANGO_DB_USER: "${{ secrets.DJANGO_DB_USER }}"
            DJANGO_DB_PASSWORD: "${{ secrets.DJANGO_DB_PASSWORD }}"
            DJANGO_DB_PORT: "${{ secrets.DJANGO_DB_PORT }}"
            WEBAPP_PORT: "${WEBAPP_PORT}"
            CONTAINER_WEBAPP_WORKDIR: "${CONTAINER_WEBAPP_WORKDIR}"
            DJANGO_PROJECT_SUBDIR: "${DJANGO_PROJECT_SUBDIR}"
            USE_DO_SPACES_FOR_STATIC: "${USE_DO_SPACES_FOR_STATIC}"
            DJANGO_DB_ENGINE: "${DJANGO_DB_ENGINE}"
            DJANGO_DEBUG: "1"
          EOF
          ))
      - name: Update Deployment image
        run: |
          kubectl set image deployment/webapp-deployment webapp=${MY_REGISTRY}/webapp:${GITHUB_SHA::7}-${GITHUB_RUN_ID::5}
      - name: Wait for rollout to finish
        run: |
          kubectl rollout status deployment/webapp-deployment
      - name: Post-build Django Commands - Migrate / Collectstatic
        run: |
          kubectl get pods --selector=app=webapp-deployment --output=jsonpath='{.items[0].metadata.name}' --field-selector=status.phase=Running
          export SINGLE_POD_NAME=$(kubectl get pods --selector=app=webapp-deployment --output=jsonpath='{.items[0].metadata.name}' --field-selector=status.phase=Running)
          echo $SINGLE_POD_NAME
          kubectl exec -it $SINGLE_POD_NAME -- bash ${CONTAINER_WEBAPP_WORKDIR}/migrate.sh
          kubectl exec -it $SINGLE_POD_NAME -- bash ${CONTAINER_WEBAPP_WORKDIR}/collectstatic.sh